'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18034
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Car_Dealership")>  _
Partial Public Class VehiclesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertVehicle(instance As Vehicle)
    End Sub
  Partial Private Sub UpdateVehicle(instance As Vehicle)
    End Sub
  Partial Private Sub DeleteVehicle(instance As Vehicle)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Group_Project_Diagram.My.MySettings.Default.Car_DealershipConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Vehicles() As System.Data.Linq.Table(Of Vehicle)
		Get
			Return Me.GetTable(Of Vehicle)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.spAddNewVehicle")>  _
	Public Function spAddNewVehicle(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(50)")> ByVal make As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(50)")> ByVal model As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(10)")> ByVal vehicleYear As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(50)")> ByVal bodyStyle As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(50)")> ByVal vinNumber As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(50)")> ByVal condition As String) As ISingleResult(Of spAddNewVehicleResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), make, model, vehicleYear, bodyStyle, vinNumber, condition)
		Return CType(result.ReturnValue,ISingleResult(Of spAddNewVehicleResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vehicles")>  _
Partial Public Class Vehicle
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _vehicleID As String
	
	Private _make As String
	
	Private _model As String
	
	Private _vehicleYear As String
	
	Private _bodyStyle As String
	
	Private _vinNumber As String
	
	Private _condition As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnvehicleIDChanging(value As String)
    End Sub
    Partial Private Sub OnvehicleIDChanged()
    End Sub
    Partial Private Sub OnmakeChanging(value As String)
    End Sub
    Partial Private Sub OnmakeChanged()
    End Sub
    Partial Private Sub OnmodelChanging(value As String)
    End Sub
    Partial Private Sub OnmodelChanged()
    End Sub
    Partial Private Sub OnvehicleYearChanging(value As String)
    End Sub
    Partial Private Sub OnvehicleYearChanged()
    End Sub
    Partial Private Sub OnbodyStyleChanging(value As String)
    End Sub
    Partial Private Sub OnbodyStyleChanged()
    End Sub
    Partial Private Sub OnvinNumberChanging(value As String)
    End Sub
    Partial Private Sub OnvinNumberChanged()
    End Sub
    Partial Private Sub OnconditionChanging(value As String)
    End Sub
    Partial Private Sub OnconditionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vehicleID", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property vehicleID() As String
		Get
			Return Me._vehicleID
		End Get
		Set
			If (String.Equals(Me._vehicleID, value) = false) Then
				Me.OnvehicleIDChanging(value)
				Me.SendPropertyChanging
				Me._vehicleID = value
				Me.SendPropertyChanged("vehicleID")
				Me.OnvehicleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_make", DbType:="NVarChar(50)")>  _
	Public Property make() As String
		Get
			Return Me._make
		End Get
		Set
			If (String.Equals(Me._make, value) = false) Then
				Me.OnmakeChanging(value)
				Me.SendPropertyChanging
				Me._make = value
				Me.SendPropertyChanged("make")
				Me.OnmakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_model", DbType:="NVarChar(50)")>  _
	Public Property model() As String
		Get
			Return Me._model
		End Get
		Set
			If (String.Equals(Me._model, value) = false) Then
				Me.OnmodelChanging(value)
				Me.SendPropertyChanging
				Me._model = value
				Me.SendPropertyChanged("model")
				Me.OnmodelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vehicleYear", DbType:="Char(10)")>  _
	Public Property vehicleYear() As String
		Get
			Return Me._vehicleYear
		End Get
		Set
			If (String.Equals(Me._vehicleYear, value) = false) Then
				Me.OnvehicleYearChanging(value)
				Me.SendPropertyChanging
				Me._vehicleYear = value
				Me.SendPropertyChanged("vehicleYear")
				Me.OnvehicleYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bodyStyle", DbType:="NVarChar(50)")>  _
	Public Property bodyStyle() As String
		Get
			Return Me._bodyStyle
		End Get
		Set
			If (String.Equals(Me._bodyStyle, value) = false) Then
				Me.OnbodyStyleChanging(value)
				Me.SendPropertyChanging
				Me._bodyStyle = value
				Me.SendPropertyChanged("bodyStyle")
				Me.OnbodyStyleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vinNumber", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property vinNumber() As String
		Get
			Return Me._vinNumber
		End Get
		Set
			If (String.Equals(Me._vinNumber, value) = false) Then
				Me.OnvinNumberChanging(value)
				Me.SendPropertyChanging
				Me._vinNumber = value
				Me.SendPropertyChanged("vinNumber")
				Me.OnvinNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_condition", DbType:="NVarChar(50)")>  _
	Public Property condition() As String
		Get
			Return Me._condition
		End Get
		Set
			If (String.Equals(Me._condition, value) = false) Then
				Me.OnconditionChanging(value)
				Me.SendPropertyChanging
				Me._condition = value
				Me.SendPropertyChanged("condition")
				Me.OnconditionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class spAddNewVehicleResult
	
	Private _vehicleID As String
	
	Private _make As String
	
	Private _model As String
	
	Private _vehicleYear As String
	
	Private _bodyStyle As String
	
	Private _vinNumber As String
	
	Private _condition As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vehicleID", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property vehicleID() As String
		Get
			Return Me._vehicleID
		End Get
		Set
			If (String.Equals(Me._vehicleID, value) = false) Then
				Me._vehicleID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_make", DbType:="NVarChar(50)")>  _
	Public Property make() As String
		Get
			Return Me._make
		End Get
		Set
			If (String.Equals(Me._make, value) = false) Then
				Me._make = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_model", DbType:="NVarChar(50)")>  _
	Public Property model() As String
		Get
			Return Me._model
		End Get
		Set
			If (String.Equals(Me._model, value) = false) Then
				Me._model = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vehicleYear", DbType:="Char(10)")>  _
	Public Property vehicleYear() As String
		Get
			Return Me._vehicleYear
		End Get
		Set
			If (String.Equals(Me._vehicleYear, value) = false) Then
				Me._vehicleYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bodyStyle", DbType:="NVarChar(50)")>  _
	Public Property bodyStyle() As String
		Get
			Return Me._bodyStyle
		End Get
		Set
			If (String.Equals(Me._bodyStyle, value) = false) Then
				Me._bodyStyle = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vinNumber", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property vinNumber() As String
		Get
			Return Me._vinNumber
		End Get
		Set
			If (String.Equals(Me._vinNumber, value) = false) Then
				Me._vinNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_condition", DbType:="NVarChar(50)")>  _
	Public Property condition() As String
		Get
			Return Me._condition
		End Get
		Set
			If (String.Equals(Me._condition, value) = false) Then
				Me._condition = value
			End If
		End Set
	End Property
End Class
